<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>JavaEE</display-name>
  <welcome-file-list>
    <welcome-file>demo/index.html</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- ServletContext配置:全局初始化参数：配置 -->
  <context-param>
  	<param-name>username</param-name>
  	<param-value>root</param-value>
  </context-param>
  <context-param>
  	<param-name>password</param-name>
  	<param-value>root</param-value>
  </context-param>
  
  <!-- servlet的配置 -->
  <!-- DefaultServlet配置作用:DefaultServlet是处理静态资源的入口，可以对目录进行定制化展现，也可以对文件资源进行输出 -->
  <servlet>
  	<servlet-name>default</servlet-name>
  	<servlet-class>org.apache.catalina.servlets.DefaultServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>default</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  <servlet>
	  <servlet-name>servlet1</servlet-name><!-- 自定义 -->
	  <servlet-class>com.lsy.code.servlet.Servlet1</servlet-class><!-- 实现类的全类名 -->
	  <load-on-startup>1</load-on-startup><!-- 默认是在第一次访问的时候创建,此处配置Servlet在服务器启动的时候创建。正整数,值被创建的优先级就越高 -->
  </servlet>
  <servlet-mapping>
  	<servlet-name>servlet1</servlet-name><!-- 两处的servlet-name需一致 -->
  	<url-pattern>/servlet1</url-pattern><!-- 访问servlet的url，自定义。【http://localhost:8080/JavaEE/servlet1】  -->
  </servlet-mapping>
  <servlet>
  	<servlet-name>servlet2</servlet-name>
  	<servlet-class>com.lsy.code.servlet.HttpServlet1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>servlet2</servlet-name>
  	<url-pattern>/servlet2</url-pattern>
  </servlet-mapping>
  <!-- listener的配置 -->
  <listener>
  	<listener-class>com.lsy.code.listener.ServletContextListener1</listener-class><!-- 实现类的全类名 -->
  </listener>
  <listener>
  	<listener-class>com.lsy.code.listener.HttpSessionListener1</listener-class>
  </listener>  
  <listener>
  	<listener-class>com.lsy.code.listener.ServletRequestListener1</listener-class>
  </listener>   
  <listener>
  	<listener-class>com.lsy.code.listener.ServletContextAttributeListener1</listener-class>
  </listener>
  <listener>
  	<listener-class>com.lsy.code.listener.HttpSessionAttributeListener1</listener-class>
  </listener>
  <listener>
  	<listener-class>com.lsy.code.listener.ServletRequestAttributeListener1</listener-class>
  </listener>
  <!-- 两分钟后session 过期 -->
  <session-config>
  	<session-timeout>2</session-timeout>
  </session-config>
  
  <!-- filter的配置 -->
  <filter>
  	<filter-name>filter1</filter-name><!-- 自定义 -->
  	<filter-class>com.lsy.code.filter.Filter1</filter-class><!-- 实现类的全类名 -->
  	<!-- 配置filter的初始化参数 -->
  	<init-param>
  		<param-name>username</param-name>
  		<param-value>root</param-value>
  	</init-param>
  	<init-param>
  		<param-name>password</param-name>
  		<param-value>root</param-value>
  	</init-param>
  </filter>
  <filter-mapping><!-- 过滤器链中过滤器的执行顺序与filter-mapping的配置顺序有关 -->
  	<filter-name>filter1</filter-name><!-- 两处的filter-name需一致 -->
  	<url-pattern>/*</url-pattern><!-- 拦截的资源 -->
  	<!-- <servlet-name>servlet1</servlet-name> --><!-- 拦截的资源特定的servlet -->
  	<dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  <filter>
  	<filter-name>filter2</filter-name><!-- 自定义 -->
  	<filter-class>com.lsy.code.filter.Filter2</filter-class><!-- 实现类的全类名 -->
  </filter>
  <filter-mapping>
  	<filter-name>filter2</filter-name><!-- 两处的filter-name需一致 -->
  	<url-pattern>/*</url-pattern><!-- 拦截的资源 -->
  </filter-mapping>  
  
  <!-- demo的servlet配置、filter配置 -->
  <servlet>
  	<servlet-name>user</servlet-name>
  	<servlet-class>com.lsy.code.demo.servlet.UserServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>user</servlet-name>
  	<url-pattern>/user</url-pattern>
  </servlet-mapping>
  <servlet>
  	<servlet-name>file</servlet-name>
  	<servlet-class>com.lsy.code.demo.servlet.FileServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>file</servlet-name>
  	<url-pattern>/file</url-pattern>
  </servlet-mapping>
  <!-- 解决中文乱码 -->
  <filter>
  	<filter-name>GenericEncodingFilter</filter-name>
  	<filter-class>com.lsy.code.demo.filter.GenericEncodingFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>GenericEncodingFilter</filter-name>
  	<url-pattern>/user/*</url-pattern>
  	<url-pattern>/file/*</url-pattern>
  </filter-mapping>
  <!-- 自动登录功能 -->
  <filter>
  	<filter-name>LoginFilter</filter-name>
  	<filter-class>com.lsy.code.demo.filter.LoginFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>LoginFilter</filter-name>
  	<url-pattern>/demo/*</url-pattern>
  	<url-pattern>/file/**</url-pattern>
  </filter-mapping>
    <!-- 阻止通过Url直接访问服务器上的静态文件 -->
  <filter>
  	<filter-name>StaticResourceFilter</filter-name>
  	<filter-class>com.lsy.code.demo.filter.StaticResourceFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>StaticResourceFilter</filter-name>
  	<url-pattern>/demo/*</url-pattern>
  </filter-mapping>
</web-app>